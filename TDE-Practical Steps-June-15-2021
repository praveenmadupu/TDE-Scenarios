--Source: https://www.b-blog.info/en/transparent-data-encryption-tde-in-sql-server-enable-keys-certificates-backups-restore.html

-- At Source Server:
===================

--Create Database Master Key on Master DB.
USE master; 
GO 
CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'Sp@1234567#000';
GO

--Backup Master Key of Master DB
USE master;  
GO 
OPEN MASTER KEY DECRYPTION BY PASSWORD = 'Sp@1234567#000';  
BACKUP MASTER KEY TO FILE = 'B:\temp\America_MasterDB_DBMasterKey.pvk'  
    ENCRYPTION BY PASSWORD = 'Sp@1234567#000';

--Create Certificate on Master Database.
USE master; 
GO 
CREATE CERTIFICATE TDE_Certificate 
WITH SUBJECT = 'TDE_Certificate_June_152021'; 
GO

--Backup certificate with Private Key
USE master;
GO
BACKUP CERTIFICATE TDE_Certificate
TO FILE = 'B:\temp\America_TDE_MasterKeyCert.cer'
WITH PRIVATE KEY
(FILE = 'B:\temp\America_TDE_MasterKey.pvk',
ENCRYPTION BY PASSWORD = 'Sp@1234567#000')

--Create DEK (Database Encryption Key) on required User DB using Certificate
USE Anirudh;
GO 
CREATE DATABASE ENCRYPTION KEY WITH ALGORITHM = AES_128 
ENCRYPTION BY SERVER CERTIFICATE TDE_Certificate; 
GO

--Enable TDE on required User DB as follows
USE Anirudh
GO
ALTER DATABASE Anirudh  SET ENCRYPTION ON;

==================================================================================================================
--Script to check Master key details:
USE master;
SELECT name, key_length, algorithm_desc, create_date, modify_date
FROM sys.symmetric_keys;
==================================================================================================================
--Script to check TDE DB List, Certificate Name, Encryption State, Encryptor Thumbprint.
SELECT D.name AS 'Database Name'
,c.name AS 'Cert Name'
,E.encryptor_type AS 'Type'
,case
    when E.encryption_state = 3 then 'Encrypted'
    when E.encryption_state = 2 then 'In Progress'
    else 'Not Encrypted'
end as state,
E.encryption_state, E.encryptor_Thumbprint, E.* FROM sys.dm_database_encryption_keys E
right join sys.databases D on D.database_id = E.database_id
left join sys.certificates c ON E.encryptor_thumbprint=c.thumbprint
where D.name not in ('master','model', 'msdb')
=================================================================================================================
--Script to find list of Certificates on MASTER Database
use master
go
SELECT * FROM sys.certificates
where name not like '%##%'
==================================================================================================================

-- At Destination Server:
========================
--Restore Master Key of Master DB of Source Server in Destination Server using below: 

USE master;
GO 
RESTORE MASTER KEY  
    FROM FILE = 'B:\temp\America_MasterDB_DBMasterKey.pvk'  
    DECRYPTION BY PASSWORD = 'Sp@1234567#000' --password to decrypt backup
    ENCRYPTION BY PASSWORD = 'Sp@1234567#111'; --password to encrypt restored Master Key in the current database.
GO

--Restore CERTIFICATE of Source Server in Destination Server using below: 

USE master;
GO
OPEN MASTER KEY DECRYPTION BY PASSWORD = 'Sp@1234567#111';
GO
CREATE CERTIFICATE TDE_Certificate
FROM FILE = 'B:\temp\America_TDE_MasterKeyCert.cer'    
WITH PRIVATE KEY (FILE = 'B:\temp\America_TDE_MasterKey.pvk',
DECRYPTION BY PASSWORD = 'Sp@1234567#000')

--Use below script to Restore TDE Enabled Source DB on Destination Server.
--Modify your Restore DB as per your requirements.

USE master
GO
OPEN MASTER KEY DECRYPTION BY PASSWORD = 'Sp@1234567#111';
GO
RESTORE DATABASE Anirudh
FROM  DISK = N'H:\SQLBackups\Delhi\Anirudh.bak'
WITH  move 'Anirudh' to 'E:\SQLData\Delhi\Anirudh.mdf',
      move 'Anirudh_log' to 'F:\SQLLogs\Delhi\Anirudh_log.ldf',
	  FILE = 1, NOUNLOAD,  REPLACE,  STATS = 5;


--Steps to disable TDE and cleanup everything if you ever

--Disable TDE.
USE master
ALTER DATABASE Anirudh SET ENCRYPTION OFF

--Drop the database encryption key.
USE Anirudh
DROP DATABASE ENCRYPTION KEY

--Drop certificate and master key on Master DB.
USE master
DROP CERTIFICATE TDE_Certificate
DROP MASTER KEY

=================================================

CASE-2: Note: On Delhi Instance, suppose that we have a different Database Master Key on Master DB (which is different from Source Server).
============================================================================================================================================

--DELHI SQL Instance

Create Database Master Key on Master DB.
USE master; 
GO 
CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'Delhi@1234567#000';
GO
USE master;  
GO 
OPEN MASTER KEY DECRYPTION BY PASSWORD = 'Delhi@1234567#000';  
BACKUP MASTER KEY TO FILE = 'H:\SQLBackups\DELHI\TDE_Files\Delhi_MasterDB_DBMasterKey.pvk'  
    ENCRYPTION BY PASSWORD = 'Delhi@1234567#000';

USE master;
GO
OPEN MASTER KEY DECRYPTION BY PASSWORD = 'Delhi@1234567#000';
GO
CREATE CERTIFICATE TDE_Certificate
FROM FILE = 'H:\SQLBackups\DELHI\TDE_Files\America_TDE_MasterKeyCert.cer'    
WITH PRIVATE KEY (FILE = 'H:\SQLBackups\DELHI\TDE_Files\America_TDE_MasterKey.pvk',
DECRYPTION BY PASSWORD = 'Sp@1234567#000')

USE master
GO
--OPEN MASTER KEY DECRYPTION BY PASSWORD = 'Sp@1234567#111'; --This Statement is NOT Required.
GO
RESTORE DATABASE Anirudh
FROM  DISK = N'H:\SQLBackups\Delhi\Anirudh.bak'
WITH  move 'Anirudh' to 'E:\SQLData\Delhi\Anirudh.mdf',
      move 'Anirudh_log' to 'F:\SQLLogs\Delhi\Anirudh_log.ldf',
	  FILE = 1, NOUNLOAD,  REPLACE,  STATS = 5;
